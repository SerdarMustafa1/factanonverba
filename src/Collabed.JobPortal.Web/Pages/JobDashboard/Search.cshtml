@page
@model Collabed.JobPortal.Web.Pages.JobDashboard.SearchModel
@{
}

@section styles {
    <abp-style src="/search.css"></abp-style>
}

@section scripts {
    <abp-script src="/Pages/JobDashboard/Search.js" />
}

<input type="hidden" asp-for=@Model.DistanceRange />

<form method="get" asp-page="Search">
    <input type="hidden" asp-for="@Model.CurrentPage" id="currentPageHiddenInput"/>
    <div class="row" style="width:100%;padding: 0px 64px; height: 10%;">
        <div class="col-2">
            @Html.DropDownListFor(c => c.Category, Model.Categories, "Select category", new { @class = "form-select", data_live_search = "true" })
        </div>
        <div class="col-5">
            <div class="input-group">
                @Html.TextBoxFor(c => c.Predicate,string.Empty, new { @class= "form-control", placeholder = "Keyword", id = "keywordInput"} )
                <label class="input-group-text"><i class="bi bi-x-circle-fill" onclick="clearSearchTerm()" style="cursor:pointer;"></i></label>
            </div>
        </div>
        <div class="col-3">
            <div class="input-group">
                <input type="text" class="form-control" asp-for="@Model.Location">
                @Html.DropDownListFor(c => c.SelectedRadius, Model.AvailableLocationRadius, new { @class = "form-select", id="selectRadius" })
            </div>
        </div>
        <div class="col-2">
            <button type="submit" class="btn btn-primary searchBtn" onclick="onPostSearch()">Search</button>
        </div>
    </div>

    <div class="semiheader no-display-on-mobile">
        <div class="row">
            <div class="col-2">
                <p class="amountPar">Showing @Model.TotalCount results</p>
            </div>
            <div class="col-5"></div>
            <div class="col-2">
                <p class="sortingPar">Sort by: </p>
            </div>
            <div class="col-3">
                <div class="input-group">
                    @Html.DropDownListFor(c => c.Sorting, Model.AvailableSortingTypes, new { @class = "form-select sorting-select", id="selectSortingType" })
                </div>
            </div>
        </div>
    </div>
    @*    <div class="display-on-mobile"> THIS CAUSES ISSUES WITH INSERTING TWO PARAMETERS WITH THE SAME NAME TO THE URL
    <p class="sortingPar">Sort by: </p>
    <div class="input-group">
    @Html.DropDownListFor(c => c.SelectedSortingType, Model.AvailableSortingTypes, new { @class = "form-select", id="selectSortingType" })
    </div>
    </div>*@
</form>

@if(Model.JobOffers.Count() > 0)
{
<div>
    @foreach (var jobDto in Model.JobOffers)
    {
            var salaryRange = jobDto.GetSalaryRange();
            var link = $"../Job?Reference={jobDto.Reference}&";
        foreach (var keyValuePair in Request.Query)
        {
            link += $"{keyValuePair.Key}={keyValuePair.Value[0]}&";
        }
            <div class="row" style="margin-top:4%;padding-inline: 0.5%;">
                <div class="card" style="padding: 0 !important;">
                    <div class="card-header" style="background-color:#FAFAFA; border-bottom: 1px solid rgba(0, 0, 0, 0.175);">
                        <span class="badge rounded-pill bg-primary">New</span>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <p class="text-30">@jobDto.Title</p>
                            <p>
                                <span style="color: #101828; font-size: 16px; font-weight: 400; line-height: 24px;">
                                @jobDto.OrganisationName
                                </span>
                            </p>
                        <p class="text-16-bold">
                                @if (!string.IsNullOrWhiteSpace(jobDto.OfficeLocation))
                                {
                                    @jobDto.OfficeLocation
                                    @if (!string.IsNullOrWhiteSpace(jobDto.JobLocation) || !string.IsNullOrWhiteSpace(salaryRange))
                                    {
                                        <i class="bi bi-dot"></i>
                                    }
                                }
                                @if (!string.IsNullOrWhiteSpace(jobDto.JobLocation))
                                {
                                    @jobDto.JobLocation
                                    @if (!string.IsNullOrWhiteSpace(salaryRange))
                                    {
                                        <i class="bi bi-dot"></i>
                                    }
                                }
                                @if (!string.IsNullOrWhiteSpace(salaryRange))
                                {
                                    @salaryRange
                                }
                            </p>
                        <br />
                            <p class="text-14">
                            @jobDto.SubDescription
                            </p>
                            <p><a class="btn btn-primary full-width-on-mobile" href=@link >More Details</a></p>
                        </div>
                    </div>
                </div>
            </div>
    }
</div>
<div class="paginationContainer">
    <ul class="pagination">
        @if(Model.CurrentPage > 1)
        {
            var link = $"?";
            foreach (var keyValuePair in Request.Query)
            {
                if (keyValuePair.Key.Equals(nameof(Model.CurrentPage))) continue;

                link += $"{keyValuePair.Key}={keyValuePair.Value[0]}&";
            }
            link += $"CurrentPage={Model.CurrentPage - 1}";
            <li class="page-item">
                <a href=@link class="page-link">
                    <i class="bi bi-chevron-left"></i>
                </a>
            </li>
        }
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            var shouldDisplayPage = i == 1 || i == Model.TotalPages ||
            (i >= Model.CurrentPage - 2 && i <= Model.CurrentPage + 2);
            var isEllipsisBefore = i == Model.CurrentPage - 3;
            var isEllipsisAfter = i == Model.CurrentPage + 3;

            if (shouldDisplayPage || isEllipsisBefore || isEllipsisAfter)
            {
                var link = $"?";
                foreach (var keyValuePair in Request.Query)
                {
                    if (keyValuePair.Key.Equals(nameof(Model.CurrentPage))) continue;

                    link += $"{keyValuePair.Key}={keyValuePair.Value[0]}&";
                }
                link += $"CurrentPage={i}";

                if (isEllipsisBefore || isEllipsisAfter)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
                else
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a href=@link class="page-link">@i</a>
                    </li>
                }
            }
        }
        @if (Model.CurrentPage < Model.TotalPages)
        {
            var link = $"?";
            foreach (var keyValuePair in Request.Query)
            {
                if (keyValuePair.Key.Equals(nameof(Model.CurrentPage))) continue;

                link += $"{keyValuePair.Key}={keyValuePair.Value[0]}&";
            }
            link += $"CurrentPage={Model.CurrentPage + 1}";
            <li class="page-item">
                <a href=@link class="page-link">
                    <i class="bi bi-chevron-right"></i>
                </a>
            </li>
        }
    </ul>
</div>
}
else {
    <div class="row" style="margin-top:4%;padding-inline: 0.5%;">
        <div class="card" style="padding: 0 !important;">
            <div class="card-body">
                <div class="row">
                    <p style="font-weight: 600;font-size: 14px;line-height: 21px;color: #1D2939;">Your search did not match any jobs.</p>
                    <br />
                    <p style="font-weight: 600;font-size: 14px;line-height: 21px;color: #1D2939;">Search suggestions:</p>
                    <ul class="hint-14" style="margin-left:2%">
                        <li>
                            <p>Try more general keywords</p>
                        </li>
                        <li>
                            <p>Check your spelling</p>
                        </li>
                        <li>
                            <p>Replace abbreviations with whole words</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
}