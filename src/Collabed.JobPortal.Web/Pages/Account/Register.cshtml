@page
@using Collabed.JobPortal.Localization;
@using Collabed.JobPortal.Web.Pages.Account;
@using Collabed.JobPortal.Web.Pages.Shared.Components.Input;
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.Account.Localization
@model BMTRegisterModel
@inject IHtmlLocalizer<JobPortalResource> L

<abp-script src="/Pages/Account/Register.js" />
<abp-script src="/Pages/Account/PasswordVisibilityIcon.js" />

<div style=" width: 400px; margin: auto">
    <div class="text-center">
        <img src="~/logo.jpg" />
        <p class="text-30">Register your account</p>
        <p class="text-16">Great to have you here!<br />Please enter your details.</p>
        
    </div>
    <form method="post">
        <input type="text" asp-for="@Model.AccountType" hidden>
        @if (!Model.IsExternalLogin)
        {
            @await Component.InvokeAsync("Input", new InputViewModel(){ InputType = "text", PropertyName = nameof(Model.UserName), HtmlTitle="UserName", PropertyValue = Model.UserName, Label = "User name *", OnKeyUp = "styleValidationOfRequiredField('UserName', 'Please type your user name'); validateForm()"})
        }
        @await Component.InvokeAsync("Input", new InputViewModel(){ InputType = "text", PropertyName = nameof(Model.EmailAddress), HtmlTitle="EmailAddress", PropertyValue = Model.EmailAddress, OnKeyUp = "validateEmail(true); validateForm()", PrependIcon = "bi bi-envelope", Label = "Email address *"})

        <div class="container">
            <div class="row">
                <div class="col" style="padding-left: 0">
                    @await Component.InvokeAsync("Input", new InputViewModel(){ InputType = "text", PropertyName = nameof(Model.FirstName), HtmlTitle="FirstName", PropertyValue = Model.FirstName, OnKeyUp = "styleValidationOfRequiredField('FirstName', 'Please type your first name'); validateForm()", Label = "First name *"})
                </div>
                <div class="col" style="padding-right: 0">
                    @await Component.InvokeAsync("Input", new InputViewModel(){ InputType = "text", PropertyName = nameof(Model.LastName), HtmlTitle="LastName", PropertyValue = Model.LastName, OnKeyUp = "styleValidationOfRequiredField('LastName', 'Please type your last name'); validateForm()", Label = "Last name *"})
                </div>
            </div>
        </div>
        @if (!Model.IsExternalLogin)
        {
            @await Component.InvokeAsync("Input", new InputViewModel(){ InputType = "password", OnKeyUp="validatePassword(true); validateForm()", PropertyName = nameof(Model.Password), HtmlTitle=Model.Password,
                Label = "Password *", PrependIcon = "bi bi-lock", AppendIcon = "bi bi-exclamation-circle", IsPassword = true})
            <div>
                <p id="hintParagraph">Your password must contain:</p>
                <p>
                    <i class="bi bi-dot" id="caseIcon"></i><span id="caseHint">Uppercase and lowercase letters</span><br />
                    <i class="bi bi-dot" id="lengthIcon"></i><span id="lengthHint">At least 8 characters</span><br />
                    <i class="bi bi-dot" id="nonAlphanumericIcon"></i><span id="nonAlphanumericParagraph">A number and a symbol</span>
                </p>
            </div>
            @await Component.InvokeAsync("Input", new InputViewModel(){ InputType = "password", PropertyName = nameof(Model.ConfirmPassword), HtmlTitle=Model.ConfirmPassword,
        OnKeyUp = "validateConfirmPassword(true); validateForm()", Label = "Confirm password *", PrependIcon = "bi bi-lock", AppendIcon = "bi bi-exclamation-circle", IsPassword = true})
        }
        <br />
        <input type="checkbox" id="GDPRConsent_input" name="GDPRConsent" title="GDPRConsent" value="true" class="form-check-input" onclick="validateForm()" />
        <input type="hidden" name="GDPRConsent" title="GDPRConsent" value="false" class="form-check-input" onclick="validateForm()" />

        <label for="GDPRConsent" class="text-14">I agree with <a href="#">Terms & Conditions</a> and <a href="#">Privacy Policy</a></label>

        <div >
            <abp-button button-type="Primary" type="submit" id="RegisterButton" class="btn-lg mt-4" disabled="true">@L["Register"]</abp-button>
        </div>
    </form>
</div>