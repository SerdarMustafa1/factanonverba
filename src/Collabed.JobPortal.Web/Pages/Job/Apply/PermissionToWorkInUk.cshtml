@page
@model Collabed.JobPortal.Web.Pages.Job.Apply.PermissionToWorkInUkModel
@section styles{
    <abp-style src="/apply-pages.css"></abp-style>
}
@{
    var previousPage = TempData.Peek("BackToJobOfferParams")?.ToString();
}
<div class="row no-display-on-mobile">
    <div class="col-4"></div>
    <div class="col-4">
        <div style="text-align:left;">
            <p class="text-36" style="margin-top:4%">@TempData.Peek("Title")</p>
            <p>
                <span style="color: #101828; font-size: 16px; font-weight: 400; line-height: 24px;">
                    Posted by @TempData.Peek("OrganisationName")
                </span>
                <span style="color: #667085; font-weight: 400; font-size: 16px; line-height:24px;">
                    on @DateTime.Parse(TempData.Peek("PublishedDate")?.ToString()).ToString("dd/MM/yyyy")
                </span>
            </p>
            <p class="text-16-bold">
                @if (!string.IsNullOrWhiteSpace(TempData.Peek("EmploymentType")?.ToString()))
                {
                    @TempData.Peek("EmploymentType")
                    @if (!string.IsNullOrWhiteSpace(TempData.Peek("ContractType")?.ToString()) || !string.IsNullOrWhiteSpace(TempData.Peek("SalaryRange")?.ToString()) ||
                   !string.IsNullOrWhiteSpace(TempData.Peek("OfficeLocation")?.ToString()) || !string.IsNullOrWhiteSpace(TempData.Peek("JobLocation")?.ToString()))
                    {
                        <i class="bi bi-dot" style="color:#2F70B6;"></i>
                    }
                }
                @if (!string.IsNullOrWhiteSpace(TempData.Peek("ContractType")?.ToString()))
                {
                    @TempData.Peek("ContractType")
                    @if (!string.IsNullOrWhiteSpace(TempData.Peek("SalaryRange")?.ToString()) ||
                   !string.IsNullOrWhiteSpace(TempData.Peek("OfficeLocation")?.ToString()) || !string.IsNullOrWhiteSpace(TempData.Peek("JobLocation")?.ToString()))
                    {
                        <i class="bi bi-dot" style="color:#2F70B6;"></i>
                    }
                }
                @if (!string.IsNullOrEmpty(TempData.Peek("SalaryRange").ToString()))
                {
                    @TempData.Peek("SalaryRange")
                    @if (!string.IsNullOrWhiteSpace(TempData.Peek("OfficeLocation")?.ToString()) || !string.IsNullOrWhiteSpace(TempData.Peek("JobLocation")?.ToString()))
                    {
                        <i class="bi bi-dot" style="color:#2F70B6;"></i>
                    }
                }
                @if (!string.IsNullOrEmpty(TempData.Peek("OfficeLocation")?.ToString()))
                {
                    @TempData["OfficeLocation"]
                    @if (!string.IsNullOrWhiteSpace(TempData.Peek("JobLocation")?.ToString()))
                    {
                        <i class="bi bi-dot" style="color:#2F70B6;"></i>
                    }
                }
                @if (!string.IsNullOrWhiteSpace(TempData.Peek("JobLocation")?.ToString()))
                {
                    @TempData.Peek("JobLocation")
                }
            </p>
            <p><a href=@previousPage class="back-link"><i class="bi bi-arrow-left back-arrow"></i>Back to job description</a></p>
        </div>
    </div>
    <div class="col-4"></div>
</div>
<div class="row display-on-mobile">
    <div style="text-align:left;">
        <p class="text-36" style="margin-top:4%">@TempData.Peek("Title")</p>
        <p>
            <span style="color: #101828; font-size: 16px; font-weight: 400; line-height: 24px;">
                Posted by @TempData.Peek("OrganisationName")
            </span>
            <span style="color: #667085; font-weight: 400; font-size: 16px; line-height:24px;">
                on @DateTime.Parse(TempData.Peek("PublishedDate")?.ToString()).ToString("dd/MM/yyyy")
            </span>
        </p>
        <p class="text-16-bold no-display-on-mobile">
            @if (!string.IsNullOrWhiteSpace(TempData.Peek("EmploymentType")?.ToString()))
            {
                @TempData.Peek("EmploymentType")
                @if (!string.IsNullOrWhiteSpace(TempData.Peek("ContractType")?.ToString()) || !string.IsNullOrWhiteSpace(TempData.Peek("SalaryRange")?.ToString()) ||
               !string.IsNullOrWhiteSpace(TempData.Peek("OfficeLocation")?.ToString()) || !string.IsNullOrWhiteSpace(TempData.Peek("JobLocation")?.ToString()))
                {
                    <i class="bi bi-dot" style="color:#2F70B6;"></i>
                }
            }
            @if (!string.IsNullOrWhiteSpace(TempData.Peek("ContractType")?.ToString()))
            {
                @TempData.Peek("ContractType")
                @if (!string.IsNullOrWhiteSpace(TempData.Peek("SalaryRange")?.ToString()) ||
               !string.IsNullOrWhiteSpace(TempData.Peek("OfficeLocation")?.ToString()) || !string.IsNullOrWhiteSpace(TempData.Peek("JobLocation")?.ToString()))
                {
                    <i class="bi bi-dot" style="color:#2F70B6;"></i>
                }
            }
            @if (!string.IsNullOrEmpty(TempData.Peek("SalaryRange").ToString()))
            {
                @TempData.Peek("SalaryRange")
                @if (!string.IsNullOrWhiteSpace(TempData.Peek("OfficeLocation")?.ToString()) || !string.IsNullOrWhiteSpace(TempData.Peek("JobLocation")?.ToString()))
                {
                    <i class="bi bi-dot" style="color:#2F70B6;"></i>
                }
            }
            @if (!string.IsNullOrEmpty(TempData.Peek("OfficeLocation")?.ToString()))
            {
                @TempData.Peek("OfficeLocation")
                @if (!string.IsNullOrWhiteSpace(TempData.Peek("JobLocation")?.ToString()))
                {
                    <i class="bi bi-dot" style="color:#2F70B6;"></i>
                }
            }
            @if (!string.IsNullOrWhiteSpace(TempData.Peek("JobLocation")?.ToString()))
            {
                @TempData.Peek("JobLocation")
            }
        </p>
        <p><a href=@previousPage class="back-link"><i class="bi bi-arrow-left back-arrow"></i>Back to job description</a></p>
    </div>
</div>
<hr class="divider" />
<div class="progress">
    <div class="progress-bar" role="progressbar" style="width: @Model.ProgressBarValue%;background-color: #2F70B6;" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100"></div>
    @if (Model.ProgressBarValue < 100)
    {
        <span class="progress-text" style="display: inline-block; margin-left: 10px;">@Model.ProgressBarValue%</span>
    }
</div>
<form method="post">
    <div style="max-width:400px;margin-inline:auto;">
        <p class="text-30">Do you have the right to work in the UK?</p>
        <p class="text-16">The hiring company has indicated that the right to work in the UK is a requirement for this role.</p>
        <hr style="margin-top:20px; margin-bottom:20px" />
        <p class="text-16">Do you have the right to work in the UK, either through a British passport or a valid visa?</p>
        <div class="form-check">
            <input class="form-check-input" type="radio" asp-for="HasRightToWork" value="true">
            <label class="form-check-label" asp-for="HasRightToWork">
                Yes
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" asp-for="HasRightToWork" value="false">
            <label class="form-check-label" asp-for="HasRightToWork">
                No
            </label>
        </div>
        <hr /><br />
        <div style="display: block; text-align: center">
            <input asp-for="UpdatedStepValue" type="hidden" id="updatedStepValue" name="UpdatedStepValue" >
            <button class="btn btn-outline-secondary" style="margin-right: 10px;" type="button" onclick="goBack()">Back</button>
            <button class="btn btn-primary submit-btn" type="submit" onclick="submitForm()"></button>
        </div>
    </div>
</form>

<script type="text/javascript">
     var localStorageValue = parseInt(localStorage.getItem("updatedStepValue"));

    var buttonElement = document.querySelector(".submit-btn"); // Selects the button using class selector

    if (localStorageValue === @Model.StepsRequired) {
        buttonElement.textContent = "Submit";
    } else {
        buttonElement.textContent = "Continue";
    }

    function goBack() {
        var step = parseInt(@Model.UpdatedStepValue);
        var previousStep = step - 1;
        console.log('permissionBack', step);
        document.getElementById("updatedStepValue").value = previousStep;
        localStorage.setItem("updatedStepValue", previousStep);

        // Existing logic to navigate back
        window.history.go(-1);
        return false;
    }

    function submitForm() {
        var form = document.querySelector("form");

        if (!validateRightToWork()) {
            return; // Prevent form submission
        }
        var step = 0;
        var isBackBtnClicked = localStorage.getItem("isBackBtnClicked");
        if(@Model.UpdatedStepValue == null)
        {
            step = parseInt(localStorage.getItem("updatedStepValue"));
        }
        else{
            if(isBackBtnClicked){
                step = parseInt(localStorage.getItem("updatedStepValue"));
            }
            else
            {
                step = parseInt(@Model.UpdatedStepValue);
            }
        }

        var nextStep = step + 1;
       document.getElementById("updatedStepValue").value = nextStep;
       localStorage.setItem("updatedStepValue", nextStep);
       localStorage.setItem("isBackBtnClicked", false);
       document.querySelector("form").submit(); // Submit the form programmatically
    }

    function validateRightToWork() {
      var hasRightToWorkRadio = document.querySelectorAll('input[type="radio"][name="HasRightToWork"]');
      var isChecked = false;

      for (var i = 0; i < hasRightToWorkRadio.length; i++) {
        if (hasRightToWorkRadio[i].checked) {
          isChecked = true;
          break;
        }
      }

      if (!isChecked) {
        return false; // Prevent form submission
      }

      return true; // Allow form submission
    }
</script>